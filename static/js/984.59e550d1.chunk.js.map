{"version":3,"file":"static/js/984.59e550d1.chunk.js","mappings":"qNAEaA,EAAeC,EAAAA,QAAAA,OAAH,qa,0CCAZC,EAAS,SAAC,GAKjB,EAJJC,SAIK,IAAD,IAHJC,KAAAA,OAGI,MAHG,SAGH,EAFJC,EAEI,EAFJA,SACGC,GACC,YACJ,OACE,SAACN,GAAD,gBAAcI,KAAMA,GAAUE,GAA9B,aACGD,IAGN,ECXYE,G,QAAWN,EAAAA,QAAAA,GAAH,uFAiBRO,GAXeP,EAAAA,QAAAA,EAAH,0KAWIA,EAAAA,QAAAA,IAAH,sQCfbQ,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1B,OACE,UAACH,EAAD,YACE,uBAAIG,EAAKA,QACT,0BAAM,gBAAKC,IAAKD,EAAKE,OAAQC,IAAI,mBACjC,yBAAIH,EAAKI,OAAO,cAChB,yBAAIJ,EAAKK,UAAU,iBACnB,SAACP,EAAD,KACA,SAACN,EAAD,CAAQE,KAAK,SAAb,SAAsB,aAG3B,E,iDCbDY,EAAAA,EAAAA,SAAAA,QAAyB,8CAElB,I,EAAMC,EAAQ,mCAAG,6GAEFD,EAAAA,EAAAA,IAAU,UAFR,cAEdE,EAFc,yBAGbA,EAAIC,MAHS,yDAKb,KAAMC,SALO,yDAAH,qDCJrB,IAEaC,EAFeC,EAAQ,MAA5BC,QAE8BC,GAAV,wGCoBfC,EAAY,WACvB,IAAcC,GCnBPC,EAAAA,EAAAA,GAAS,CAAEC,SAAU,CAAC,SAAUC,QAASZ,IDmBxCE,KAOR,OANAW,QAAQC,IAAI,SAAUL,IAOpB,SAACL,EAAD,UACGK,EAAMM,KAAI,SAACtB,GAAD,OACT,SAACD,EAAD,CAAWC,KAAMA,GAAWgB,EAAMO,GADzB,KAKhB,EExBD,EATe,WACb,OACE,iCACE,SAACR,EAAD,KACA,SAACvB,EAAD,CAAQE,KAAK,SAAb,SAAsB,gBAG3B,C","sources":["components/Button/Button.styled.js","components/Button/Button.js","components/UsersItem/UsersItem.styled.js","components/UsersItem/UsersItem.js","services/api.js","components/UsersList/UsersList.styled.js","components/UsersList/UsersList.js","hooks/useUsers.js","pages/Tweets/Tweets.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ButtonStyled = styled.button`\n  display: inline-flex;\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  background-color: #ebd8ff;\n  color: inherit;\n\n  /* .btn.isSelected {\n  background-color: #1976d2;\n  color: #fff;\n} */\n\n  :hover {\n    background-color: #1976d2;\n    color: #fff;\n  }\n\n  /* :active {\n    background-color: #1565c0;\n    color: #fff;\n  } */\n`;\n","import { ButtonStyled } from \"./Button.styled\";\n\nexport const Button = ({\n  selected = false,\n  type = \"button\",\n  children,\n  ...otherProps\n}) => {\n  return (\n    <ButtonStyled type={type} {...otherProps}>\n      {children}\n    </ButtonStyled>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const UserCard = styled.li`\n  width: 380px;\n  height: 460px;\n  background-color: pink;\n`;\n\nexport const UserInfoText = styled.p`\n  font-family: \"Montserrat\";\n\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1, 2;\n  text-transform: uppercase;\n\n  color: #ebd8ff;\n`;\n\nexport const AvatarWrapper = styled.div`\n  /* width: 80px;\n  height: 80px;\n\n  border-width: 9px;\n  border-radius: 50%;\n\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff; */\n`;\n","import React from \"react\";\nimport { AvatarWrapper, UserCard } from \"./UsersItem.styled\";\nimport { Button } from \"components/Button/Button\";\n\nexport const UsersItem = ({ user }) => {\n  return (\n    <UserCard>\n      <p>{user.user}</p>\n      <div>{<img src={user.awatar} alt=\"user avatar\" />}</div>\n      <p>{user.tweets} TWEETS</p>\n      <p>{user.followers} FOLLOWERS</p>\n      <AvatarWrapper></AvatarWrapper>\n      <Button type=\"button\">FOLLOW</Button>\n    </UserCard>\n  );\n};\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://641b2a469b82ded29d4bddd7.mockapi.io\";\n\nexport const getUsers = async () => {\n  try {\n    const res = await axios.get(\"/users\");\n    return res.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const increaseFollowers = async (user) => {\n  try {\n    const res = await axios.put(`/users/${user.id}`, {\n      followers: user.followers + 1,\n    });\n    return res.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const decreaseFollowers = async (user) => {\n  try {\n    const res = await axios.put(`/users/${user.id}`, {\n      followers: user.followers - 1,\n    });\n    return res.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n","const { default: styled } = require(\"styled-components\");\n\nexport const UsersListStyled = styled.ul`\n  display: flex;\n  gap: 10px;\n  margin: 0 auto;\n\n  flex-direction: column;\n`;\n","// import { Task } from \"components/Task/Task\";\nimport { UsersItem } from \"components/UsersItem/UsersItem\";\n\n// import { useSelector } from \"react-redux\";\n// import { statusFilters } from \"redux/constants\";\n// import { getStatusFilter } from \"redux/selectors\";\nimport { useUsers } from \"hooks/useUsers\";\nimport { UsersListStyled } from \"./UsersList.styled\";\n\n// const getVisibleTasks = (tasks = [], statusFilter) => {\n//   switch (statusFilter) {\n//     case statusFilters.active:\n//       return tasks.filter((task) => !task.completed);\n\n//     case statusFilters.completed:\n//       return tasks.filter((task) => task.completed);\n\n//     default:\n//       return tasks;\n//   }\n// };\n\nexport const UsersList = () => {\n  const { data: users } = useUsers();\n  console.log(\"users:\", users);\n\n  //   const statusFilter = useSelector(getStatusFilter);\n\n  //   const visibleTasks = getVisibleTasks(query.data, statusFilter);\n\n  return (\n    <UsersListStyled>\n      {users.map((user) => (\n        <UsersItem user={user} key={users.id} />\n      ))}\n    </UsersListStyled>\n  );\n};\n","import { useQuery } from \"@tanstack/react-query\";\nimport { getUsers } from \"services/api\";\n\nexport function useUsers() {\n  return useQuery({ queryKey: [\"users\"], queryFn: getUsers });\n}\n","import { Button } from \"components/Button/Button\";\nimport { UsersList } from \"components/UsersList/UsersList\";\nimport React from \"react\";\n\nconst Tweets = () => {\n  return (\n    <>\n      <UsersList />\n      <Button type=\"button\">Load more</Button>\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["ButtonStyled","styled","Button","selected","type","children","otherProps","UserCard","AvatarWrapper","UsersItem","user","src","awatar","alt","tweets","followers","axios","getUsers","res","data","message","UsersListStyled","require","default","ul","UsersList","users","useQuery","queryKey","queryFn","console","log","map","id"],"sourceRoot":""}