{"version":3,"file":"static/js/744.b98679c5.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.js","redux/selectors.js","components/StatusFilter/StatusFilter.js","components/UsersItem/UsersItem.styled.js","services/api.js","components/UsersItem/UsersItem.js","components/UsersList/UsersList.styled.js","components/UsersList/UsersList.js","pages/Tweets/Tweets.js","hooks/useUsers.js","helpers/filterUserByStatus.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ButtonStyled = styled.button`\n  display: inline-flex;\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  background-color: #ebd8ff;\n  color: inherit;\n\n  /* .btn.isSelected {\n  background-color: #1976d2;\n  color: #fff;\n} */\n\n  :hover {\n    background-color: #1976d2;\n    color: #fff;\n  }\n\n  /* :active {\n    background-color: #1565c0;\n    color: #fff;\n  } */\n`;\n","import { ButtonStyled } from \"./Button.styled\";\n\nexport const Button = ({\n  selected = false,\n  type = \"button\",\n  children,\n  ...otherProps\n}) => {\n  return (\n    <ButtonStyled type={type} {...otherProps}>\n      {children}\n    </ButtonStyled>\n  );\n};\n","export const selectFollowingUsers = (state) => state.followedUsers.items;\nexport const selectStatusFilter = (state) => state.filters.status;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { statusFilters } from \"redux/constants\";\nimport { setStatusFilter } from \"redux/filterSlice\";\nimport { selectStatusFilter } from \"redux/selectors\";\n\nconst DropdownContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst DropdownButton = styled.button`\n  background-color: #4caf50;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n`;\n\nconst DropdownContent = styled.div`\n  display: ${({ open }) => (open ? \"block\" : \"none\")};\n  position: absolute;\n  background-color: #f9f9f9;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n`;\n\nconst DropdownItem = styled.div`\n  color: black;\n  padding: 12px 16px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #f1f1f1;\n  }\n`;\n\nexport const StatusFilter = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const dispatch = useDispatch();\n  const statusFilter = useSelector(selectStatusFilter);\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleItemClick = (statusFilter) => {\n    dispatch(setStatusFilter(statusFilter));\n    setIsOpen(false);\n  };\n\n  const handleClickOutside = (event) => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <DropdownContainer ref={dropdownRef}>\n      <DropdownButton onClick={toggleDropdown}>{statusFilter}</DropdownButton>\n      <DropdownContent open={isOpen}>\n        <DropdownItem onClick={() => handleItemClick(statusFilters.all)}>\n          Show All\n        </DropdownItem>\n        <DropdownItem onClick={() => handleItemClick(statusFilters.follow)}>\n          Follow\n        </DropdownItem>\n        <DropdownItem onClick={() => handleItemClick(statusFilters.followings)}>\n          Followings\n        </DropdownItem>\n      </DropdownContent>\n    </DropdownContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const UserCard = styled.li`\n  width: 380px;\n  height: 460px;\n  background-color: pink;\n`;\n\nexport const UserInfoText = styled.p`\n  font-family: \"Montserrat\";\n\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1, 2;\n  text-transform: uppercase;\n\n  color: #ebd8ff;\n`;\n\nexport const AvatarWrapper = styled.div`\n  /* width: 80px;\n  height: 80px;\n\n  border-width: 9px;\n  border-radius: 50%;\n\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff; */\n`;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://641b2a469b82ded29d4bddd7.mockapi.io\";\n\nexport const getUsers = async () => {\n  try {\n    const res = await axios.get(\"/users\");\n    return res.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const increaseFollowers = async (user) => {\n  console.log(\"user:\", user);\n  try {\n    const res = await axios.put(`/users/${user.id}`, {\n      followers: user.followers + 1,\n    });\n    console.log(\"res:\", res.data);\n    return res.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const decreaseFollowers = async (user) => {\n  try {\n    const res = await axios.put(`/users/${user.id}`, {\n      followers: user.followers - 1,\n    });\n    return res.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n","import React from \"react\";\nimport { AvatarWrapper, UserCard } from \"./UsersItem.styled\";\nimport { Button } from \"components/Button/Button\";\nimport { increaseFollowers, decreaseFollowers } from \"services/api\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\n\nimport {\n  addFollowingUser,\n  deleteFollowingUser,\n} from \"redux/followedUsersSlice\";\nimport { useDispatch } from \"react-redux\";\n\nexport const UsersItem = ({ user, following }) => {\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n\n  const addFollowerMutation = useMutation({\n    mutationFn: increaseFollowers,\n    onSuccess: () => {\n      // Invalidate and refetch\n      dispatch(addFollowingUser(user));\n      queryClient.invalidateQueries({ queryKey: [\"users\"] });\n    },\n  });\n\n  const deleteFollowerMutation = useMutation({\n    mutationFn: decreaseFollowers,\n    onSuccess: () => {\n      // Invalidate and refetch\n      dispatch(deleteFollowingUser(user.id));\n      queryClient.invalidateQueries({ queryKey: [\"users\"] });\n    },\n  });\n\n  const onButtonFollowClick = () => {\n    addFollowerMutation.mutate(user);\n  };\n\n  const onButtonUnFollowClick = () => {\n    deleteFollowerMutation.mutate(user);\n  };\n\n  return (\n    <UserCard>\n      <p>{user.user}</p>\n      <div>{<img src={user.awatar} alt=\"user avatar\" />}</div>\n      <p>{user.tweets} TWEETS</p>\n      <p>{user.followers} FOLLOWERS</p>\n      <AvatarWrapper></AvatarWrapper>\n      {!following ? (\n        <Button type=\"button\" onClick={onButtonFollowClick}>\n          FOLLOW\n        </Button>\n      ) : (\n        <Button type=\"button\" onClick={onButtonUnFollowClick}>\n          FOLLOWING\n        </Button>\n      )}\n    </UserCard>\n  );\n};\n","const { default: styled } = require(\"styled-components\");\n\nexport const UsersListStyled = styled.ul`\n  display: flex;\n  gap: 10px;\n  margin: 0 auto;\n\n  flex-direction: column;\n`;\n","// import { Task } from \"components/Task/Task\";\nimport { UsersItem } from \"components/UsersItem/UsersItem\";\n\nimport { useSelector } from \"react-redux\";\n\n// import { statusFilters } from \"redux/constants\";\n// import { getStatusFilter } from \"redux/selectors\";\n\nimport { UsersListStyled } from \"./UsersList.styled\";\n\nimport { selectFollowingUsers } from \"redux/selectors\";\n\nexport const UsersList = ({ users }) => {\n  const followedUsers = useSelector(selectFollowingUsers);\n\n  const isFollowing = (user) =>\n    followedUsers.some((item) => item.id === user.id);\n\n  return (\n    users && (\n      <UsersListStyled>\n        {users.map((user) => (\n          <UsersItem user={user} key={user.id} following={isFollowing(user)} />\n        ))}\n      </UsersListStyled>\n    )\n  );\n};\n","import { Button } from \"components/Button/Button\";\nimport { StatusFilter } from \"components/StatusFilter/StatusFilter\";\nimport { UsersList } from \"components/UsersList/UsersList\";\nimport { filterUserByStatus } from \"helpers\";\nimport { useUsers } from \"hooks/useUsers\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectStatusFilter, selectFollowingUsers } from \"redux/selectors\";\n\nconst Tweets = () => {\n  const { data: users = [] } = useUsers();\n  const statusFilter = useSelector(selectStatusFilter);\n  const followingUsers = useSelector(selectFollowingUsers);\n\n  const filteredUsers = filterUserByStatus(users, followingUsers, statusFilter);\n\n  const usersPerPage = 3;\n\n  const [page, setPage] = useState(1);\n  const visibleUsers = [...filteredUsers].splice(0, page * usersPerPage);\n\n  const totalPage = Math.ceil(filteredUsers.length / usersPerPage);\n\n  const onLoadMoreButtonClick = () => {\n    if (page >= totalPage) {\n      return;\n    }\n\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  return (\n    <>\n      <StatusFilter />\n      <UsersList users={visibleUsers} />\n      <Button type=\"button\" onClick={onLoadMoreButtonClick}>\n        Load more\n      </Button>\n    </>\n  );\n};\n\nexport default Tweets;\n","import { useQuery } from \"@tanstack/react-query\";\nimport { getUsers } from \"services/api\";\n\nexport function useUsers() {\n  return useQuery({ queryKey: [\"users\"], queryFn: getUsers });\n}\n","import { statusFilters } from \"redux/constants\";\n\nexport const filterUserByStatus = (allUsers, followingUsers, filterStatus) => {\n  switch (filterStatus) {\n    case statusFilters.follow:\n      return allUsers.filter(\n        (user) => !followingUsers.some((item) => item.id === user.id)\n      );\n\n    case statusFilters.followings:\n      return allUsers.filter((user) =>\n        followingUsers.some((item) => item.id === user.id)\n      );\n\n    default:\n      return allUsers;\n  }\n};\n"],"names":["ButtonStyled","styled","Button","selected","type","children","otherProps","selectFollowingUsers","state","followedUsers","items","selectStatusFilter","filters","status","DropdownContainer","DropdownButton","DropdownContent","open","DropdownItem","StatusFilter","useState","isOpen","setIsOpen","dropdownRef","useRef","dispatch","useDispatch","statusFilter","useSelector","handleItemClick","setStatusFilter","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","onClick","statusFilters","UserCard","AvatarWrapper","axios","getUsers","res","data","message","increaseFollowers","user","console","log","id","followers","decreaseFollowers","UsersItem","following","queryClient","useQueryClient","addFollowerMutation","useMutation","mutationFn","onSuccess","addFollowingUser","invalidateQueries","queryKey","deleteFollowerMutation","deleteFollowingUser","src","awatar","alt","tweets","mutate","UsersListStyled","require","default","ul","UsersList","users","isFollowing","some","item","map","useQuery","queryFn","filteredUsers","allUsers","followingUsers","filterStatus","filter","filterUserByStatus","page","setPage","visibleUsers","splice","totalPage","Math","ceil","length","prevPage"],"sourceRoot":""}